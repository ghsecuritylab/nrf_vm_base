---
  - name: Install needed packages for the development environment
    apt: pkg={{item}} state=installed
    with_items:
      - build-essential
      - lib32z1
      - lib32ncurses5
      - unzip
      - binutils-avr
      - binutils-arm-none-eabi
      - cmake
      - libtool
      - pkg-config
      - autoconf
      - automake
      - texinfo
      - python-pip

  - name: Create directories
    file: path={{item}} state=directory
    with_items:
      - "{{downloads}}"
      - "{{home}}/.bash"

  - name: See if ghr is installed
    stat: path=/usr/local/bin/ghr
    register: ghr_installed

  - name: Copy ghr
    copy: src=ghr dest=/usr/local/bin/ghr
    when: not ghr_installed.stat.exists

  - name: Set ghr permissions
    file: path=/usr/local/bin/ghr mode=0777

  - name: See if cross-compiler installed
    stat: path=/usr/local/{{toolchain_base}}
    register: cc_installed

  - name: See if cross-compiler copied
    stat: path="{{downloads}}/{{toolchain_full}}"
    register: cc_copied
    when: not cc_installed.stat.exists

  - name: Copy cross compiler
    copy: src={{toolchain_full}} dest={{downloads}}/{{toolchain_full}}
    when: not cc_installed.stat.exists and not cc_copied.stat.exists

  - name: Unarchive the cross compiler
    unarchive: src={{downloads}}/{{toolchain_full}} dest=/usr/local copy=no mode="u=rwx,g=rwx,o=rwx"
    when: not cc_installed.stat.exists

  - name: Add support for git-aware bash prompt
    git: repo=git://github.com/jimeh/git-aware-prompt.git dest={{home}}/.bash/git-aware-prompt accept_hostkey=true

  - name: Include git-aware in bashrc
    lineinfile: dest={{home}}/.bashrc line='export GITAWAREPROMPT=~/.bash/git-aware-prompt' regexp='export GITAWAREPROMPT=~/.bash/git-aware-prompt'

  - name: Include git-aware in bashrc
    lineinfile: dest={{home}}/.bashrc line='source ~/.bash/git-aware-prompt/main.sh' regexp='source ~/.bash/git-aware-prompt/main.sh'

  - name: Set the git-aware prompt
    lineinfile: dest={{home}}/.bashrc line='export PS1="\${debian_chroot:+(\$debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\] \[$txtcyn\]\$git_branch\[$txtred\]\$git_dirty\[$txtrst\]\$ "'

  - name: Copy gitconfig file
    copy: src=.gitconfig dest={{home}}/.gitconfig owner={{user}} group={{user}}

  - name: Set ownership of our files
    file: path={{item}} owner={{user}} group={{user}} recurse=yes state=directory
    with_items:
      - "{{downloads}}"
      - "{{home}}/.bash"

  - name: See if nrfutil is there
    stat: path=/usr/local/bin/nrfutil
    register: nrfutil_installed

  - name: Retrieve nrfutil
    git: repo=https://github.com/NordicSemiconductor/pc-nrfutil.git dest={{home}}/pc-nrfutil accept_hostkey=yes update=yes
    ignore_errors: True
    when: not nrfutil_installed.stat.exists

  - name: Install nrfutil dependencies
    command: sh -c "cd {{home}}/pc-nrfutil && sudo pip install -r requirements.txt"
    when: not nrfutil_installed.stat.exists

  - name: Install nrfutil
    command: sh -c "cd {{home}}/pc-nrfutil && sudo python setup.py install"
    when: not nrfutil_installed.stat.exists
